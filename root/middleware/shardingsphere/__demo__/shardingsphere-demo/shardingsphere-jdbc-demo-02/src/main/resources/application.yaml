spring:
  shardingsphere:
    # 模式配置
    mode:
      type: Standalone
    # 数据源配置
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.192.192.101:3306/demo
        username: root
        password: root
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.192.192.101:3307/demo
        username: root
        password: root
    # 规则配置
    rules:
      # 数据分片
      sharding:
        tables:
          t_order:
            # 标准分片表配置
            actual-data-nodes: ds$->{0..1}.t_order$->{0..2}
            # 分布式序列策略配置
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
            # 分库策略配置
            database-strategy:
              standard:
                sharding-column: order_code
                sharding-algorithm-name: db_alg
            # 分表策略配置
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: tb_alg_t_order
          t_order_item:
            # 标准分片表配置
            actual-data-nodes: ds$->{0..1}.t_order_item$->{0..2}
            # 分布式序列策略配置
            key-generate-strategy:
              column: id
              key-generator-name: snowflake
            # 分库策略配置
            database-strategy:
              standard:
                sharding-column: order_code
                sharding-algorithm-name: db_alg
            # 分表策略配置
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: tb_alg_t_order_item
          t_dict:
            # 标准分片表配置
            actual-data-nodes: ds$->{0..1}.t_dict$->{0..2}
        # 分布式序列算法配置
        key-generators:
          snowflake:
            type: SNOWFLAKE
        # 算法配置
        sharding-algorithms:
          db_alg:
            type: HASH_MOD
            props:
              sharding-count: 2
          tb_alg_t_order:
            type: INLINE
            props:
              algorithm-expression: t_order$->{id % 3}
          tb_alg_t_order_item:
            type: INLINE
            props:
              algorithm-expression: t_order_item$->{id % 3}
        # 绑定表
        binding-tables:
          - t_order,t_order_item
        # 广播表
        broadcast-tables:
          - t_dict
    props:
      sql-show: true
